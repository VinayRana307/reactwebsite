{"version":3,"sources":["Pages/Signup/Registeruser/login_gif.gif","shared/validator.js","Pages/Signup/Registeruser/RegisterUser.js","Pages/Signup/index.js"],"names":["module","exports","isEmpty","thing","empty","trim","length","Object","keys","Register","props","handleInputChange","event","target","value","name","formData","state","setState","validateRegisterForm","e","errors","password","cpassword","register","preventDefault","requestOptions","method","headers","body","JSON","stringify","firstName","lastName","email","countryCode","phoneNumber","fetch","ServerPath","then","response","text","data","parse","ok","status","window","location","href","alert","message","statusText","res","localStorage","setItem","formSubmitted","getItem","loading","this","className","src","Home","width","height","style","paddingBottom","marginTop","onSubmit","FormGroup","Label","for","Input","type","placeholder","onChange","required","pattern","title","validationstate","Button","id","to","Component","tabsContent","content","RegisterUser","tabsWrapperClass","transform","showInkBar","items","map","tab","index","getContent","key","React"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,uC,iMCmB9BC,EAAU,SAACC,GACpB,IAAIC,GAAQ,EAEZ,cAAeD,GACX,IAAK,YACDC,GAAQ,EACR,MACJ,IAAK,SAC2B,IAAxBD,EAAME,OAAOC,SACbF,GAAQ,GAEZ,MACJ,IAAK,UACa,OAAVD,GAEqC,IAA9BI,OAAOC,KAAKL,GAAOG,UAD1BF,GAAQ,GAIZ,MACJ,QACIA,GAAQ,EAGhB,OAAOA,G,0BC4KIK,E,kDA/MX,WAAYC,GAAQ,IAAD,uBACf,cAAMA,IAWVC,kBAAoB,SAACC,GACjB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACdC,EAAa,EAAKC,MAAlBD,SACNA,EAASD,GAAQD,EACjB,EAAKI,SAAS,CACVF,SAAUA,KAnBC,EAsBnBG,qBAAuB,SAACC,GACpB,IAAIC,EAAS,GACNL,EAAY,EAAKC,MAAjBD,SAIP,OAHFA,EAASM,WAAaN,EAASO,YAClCF,EAAOE,UAAY,4BAEVrB,EAAQmB,IAGDA,GA/BI,EAkCnBG,SAAW,SAACZ,GACRA,EAAMa,iBACN,IAAIJ,EAAS,EAAKF,uBAClB,IAAc,IAAXE,EAAgB,CAAC,IACnBL,EAAW,EAAKC,MAAMD,SACtBU,EAAiB,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACpBC,UAAahB,EAASgB,UACtBC,SAAYjB,EAASiB,SACrBC,MAAUlB,EAASkB,MACnBZ,SAAYN,EAASM,SACrBa,YAAenB,EAASmB,YACxBC,YAAepB,EAASoB,eAUzB,OAAOC,MAAM,UAAY,EAAKpB,MAAMqB,WAAa,cAAeZ,GAC/Da,MAOD,SAAwBC,GACxB,OAAOA,EAASC,OAAOF,MAAK,SAAAE,GAC3B,IAAMC,EAAOD,GAAQX,KAAKa,MAAMF,GAChC,GAAID,EAASI,GACW,MAApBJ,EAASK,SACXC,OAAOC,SAASC,KAAO,8BAGrB,CACqB,MAApBR,EAASK,QACgB,MAApBL,EAASK,QACjBI,MAAMP,EAAKQ,SAGGR,GAAQA,EAAKQ,SAAYV,EAASW,WAElD,OAAOT,QAtBPH,MAAK,SAAAa,GAIL,OAHIA,GACHC,aAAaC,QAAQ,MAAOxB,KAAKC,UAAUqB,IAErCA,KAsBT,EAAKlC,SAAS,CACbG,OAAQA,EACRkC,eAAe,KArFV,IAAMjB,EAAaR,KAAKa,MAAMU,aAAaG,QAAQ,eAHpC,OAIrB,EAAKvC,MAAQ,CACZqB,WAAYA,EACHtB,SAAU,GACVK,OAAQ,GACRkC,eAAe,EACxBE,SAAS,GATW,E,qDA4FT,IAAD,IAC6BC,KAAKzC,MAA/BI,EADH,EACGA,OAAQkC,EADX,EACWA,cAChB,OACL,yBAAKI,UAAU,mBACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,kBACf,8BAAM,yBAAKC,IAAKC,IAAMF,UAAU,SAASG,MAAO,IAAKC,OAAQ,QAE7D,yBAAKJ,UAAU,kBACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,0BACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,aACf,yBAAKA,UAAU,8BACd,yCAGF,yBAAKA,UAAU,WAAWK,MAAO,CAACC,cAAc,QAC/C,yBAAKN,UAAU,aACf,yBAAKA,UAAU,yBACd,uBAAGK,MAAO,CAACE,UAAU,QAArB,WAGF,yBAAKP,UAAU,gBAAgBK,MAAO,CAACC,cAAc,QACpD,yBAAKN,UAAU,aACf,yBAAKA,UAAU,yBACd,uBAAGK,MAAO,CAACE,UAAU,QAAQ,0BAAMP,UAAU,eAAhB,UAA7B,IAAyE,0BAAMA,UAAU,aAAhB,YAG5E,yBAAKA,UAAU,OACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACd,yBAAKA,UAAU,YACd,0BAAMQ,SAAUT,KAAKlC,UACpB,kBAAC4C,EAAA,EAAD,CAAWT,UAAU,eACpB,kBAACU,EAAA,EAAD,CAAOC,IAAI,YAAYX,UAAU,YAChC,kBAACY,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,aAAaC,SAAUhB,KAAK/C,kBAAmBI,KAAK,YAAY4D,UAAQ,KAExG,kBAACN,EAAA,EAAD,CAAOV,UAAU,YAChB,kBAACY,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,YAAYC,SAAUhB,KAAK/C,kBAAmBI,KAAK,WAAW4D,UAAQ,MAGvG,kBAACP,EAAA,EAAD,CAAWT,UAAU,eACpB,kBAACU,EAAA,EAAD,CAAOV,UAAU,aAChB,kBAACY,EAAA,GAAD,GAAOC,KAAK,QAAQzD,KAAK,QAAQ0D,YAAY,QAAQC,SAAUhB,KAAK/C,mBAApE,qBAA4F,SAA5F,wBAA4G,2CAA5G,MAIF,kBAACyD,EAAA,EAAD,CAAWT,UAAU,eACpB,kBAACU,EAAA,EAAD,CAAOV,UAAU,YAChB,kBAACY,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,SAASC,SAAUhB,KAAK/C,kBAAmBI,KAAK,cAAc4D,UAAQ,KAEtG,kBAACN,EAAA,EAAD,CAAOV,UAAU,YAChB,kBAACY,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,QAAQC,SAAUhB,KAAK/C,kBAAmBI,KAAK,cAAc4D,UAAQ,MAgBtG,kBAACP,EAAA,EAAD,CAAWT,UAAU,eACpB,kBAACU,EAAA,EAAD,CAAOV,UAAU,YAChB,kBAACY,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,WAAWC,SAAUhB,KAAK/C,kBAAmBI,KAAK,WAAW6D,QAAQ,uCAAsCC,MAAM,4GAA4GF,UAAQ,KAEzQ,kBAACN,EAAA,EAAD,CAAOV,UAAU,WAAWmB,gBAAkBvB,EAAiBlC,EAAOE,UAAY,QAAU,UAAa,MACxG,kBAACgD,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,mBAAmBC,SAAUhB,KAAK/C,kBAAmBI,KAAK,YAAY4D,UAAQ,IAC/GtD,EAAOE,WACR,8BAAOF,EAAOE,aAgBjB,kBAAC6C,EAAA,EAAD,CAAWT,UAAU,eACpB,kBAACU,EAAA,EAAD,CAAOV,UAAU,aAChB,kBAACoB,EAAA,EAAD,CAAQP,KAAK,SAASb,UAAU,yBAAyBqB,GAAG,UAA5D,cAGF,kBAACZ,EAAA,EAAD,CAAWT,UAAU,eACpB,kBAACU,EAAA,EAAD,CAAOV,UAAU,aAChB,yBAAKA,UAAU,wBAAf,uBAA0D,8BAAM,kBAAC,IAAD,CAAMsB,GAAG,oBAAT,qBAStE,yBAAKtB,UAAU,oB,GAzMEuB,aCHjBC,EAAc,CAChB,CACIN,MAAO,QACPO,QAAS,kBAAC,EAAD,Q,IAYIC,E,uKAEhB,OACO,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMC,iBAAiB,oCAAoCC,WAAW,EAAOC,YAAY,EAAMC,MAXpGN,EAAYO,KAAI,SAACC,EAAKC,GAAN,MAAiB,CACpCf,MAAOc,EAAId,MACXgB,WAAY,kBAAMF,EAAIP,SACtBU,IAAKF,a,GAI6BG,IAAMb","file":"static/js/9.6e91bf14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_gif.5e7d2969.gif\";","/**\n * Chek if email is valid\n * @prop String email\n * @returns Boolean\n */\nexport const isEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nexport const isNumber = (number) => {\n    const re = /^[0-9]{0,30}$/;\n    return re.test(number);\n}\n/**\n * Chek if vatiable is empty\n * @prop String thing\n * @returns Boolean\n */\nexport const isEmpty = (thing) => {\n    let empty = false;\n\n    switch (typeof thing) {\n        case 'undefined':\n            empty = true;\n            break;\n        case 'string':\n            if (thing.trim().length === 0) {\n                empty = true;\n            }\n            break;\n        case 'object':\n            if (thing === null) {\n                empty = true;\n            } else if (Object.keys(thing).length === 0) {\n                empty = true;\n            }\n            break;\n        default:\n            empty = true;\n    }\n\n    return empty;\n}\n\n/**\n * Check length of the string greater than\n * @prop String|Integer str\n * @prop boolean|options.trim Trim input before validating\n * @prop number|options.lt Check if length less than lt\n * @prop number|options.lte Check if length is less than or equals to lte\n * @prop number|options.gt Check if length is greater than gt\n * @prop number|options.gte Check if length is greater than or equals to gte\n * @returns Boolean\n */\nexport const isLength = (str, options) => {\n\n    if (isEmpty(options)) {\n        throw new Error(\"Who will provide the options you?\")\n    }\n\n    let isValid = true;\n\n    if (['string', 'number'].indexOf(typeof str) === -1) {\n        isValid = false;\n    } else {\n        // Convert to string incase it's number\n        let len = 0;\n\n        if(options.trim){\n            len = str.toString().trim().length;\n        } else {\n            len = str.toString().length;\n        }\n\n        if (typeof options.lt === 'number' && len >= options.lt) {\n            isValid = false;\n        } else if (typeof options.lte === 'number' && len > options.lte) {\n            isValid = false;\n        } else if (typeof options.gt === 'number' && len <= options.gt) {\n            isValid = false;\n        } else if (typeof options.gte === 'number' && len < options.gte) {\n            isValid = false;\n        }\n    }\n    return isValid;\n}\n\n/**\n * Check if string contains whitespaces\n * @prop String str\n * @returns Boolean\n */\nexport const isContainWhiteSpace = (str) => {\n\n    if(typeof str === 'string' || typeof str === 'number'){\n        return str.toString().trim().indexOf(' ') !== -1;\n    } else {\n        return false;\n    }\n}","import React, { Component } from \"react\";\nimport {FormGroup,Button,HelpBlock} from 'react-bootstrap';\nimport {Label,Input,} from 'reactstrap';\nimport { isEmail, isEmpty, isLength, isContainWhiteSpace } from '../../../shared/validator';\nimport { Link } from 'react-router-dom';\nimport  Home  from './login_gif.gif';\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        const ServerPath = JSON.parse(localStorage.getItem('ServerPath'));\n\t\tthis.state = {\n\t\t\tServerPath: ServerPath,\n            formData: {}, // Contains login form data\n            errors: {}, // Contains login field errors\n            formSubmitted: false, // Indicates submit status of login form\n\t\t\tloading: false, // Indicates in progress state of login form\n        }\n    }\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let { formData } = this.state;\n        formData[name] = value;\n        this.setState({\n            formData: formData\n        });\n    }\n    validateRegisterForm = (e) => {\n        let errors = {};\n        const {formData} = this.state;\n\t\tif (formData.password !== formData.cpassword) {\n\t\t\terrors.cpassword = \"Password doesn't match\";\n\t\t}\n        if (isEmpty(errors)) {\n            return true;\n        } else {\n            return errors;\n        }\n    }\n    register = (event) => {\n        event.preventDefault();\n        let errors = this.validateRegisterForm();\n        if(errors === true){\n\t\t\tconst formData = this.state.formData;\n\t\t\tconst requestOptions = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tfirstName\t\t: formData.firstName,\n\t\t\t\tlastName\t\t: formData.lastName,\n\t\t\t\temail\t\t\t: formData.email,\n\t\t\t\tpassword\t\t: formData.password,\n\t\t\t\tcountryCode\t\t: formData.countryCode,\n\t\t\t\tphoneNumber\t\t: formData.phoneNumber,\n\t\t\t})\n\t\t\t};\n\t\t\t{/*\n\t\t\t\tcity \t\t\t: formData.city,\n\t\t\t\tstate\t\t\t: formData.state,\n\t\t\t\tcountry\t\t\t: formData.country,\n\t\t\t\troleType\t\t: formData.roleType\n\t\t\t*/}\n\t\t\t//return fetch(`'http://' + this.state.ServerPath + '/api/signUp`, requestOptions)\n\t\t\treturn fetch('http://' + this.state.ServerPath + '/api/signUp', requestOptions)\n\t\t\t.then(handleResponse)\n\t\t\t.then(res => {\n\t\t\t\tif (res) {\n\t\t\t\t\tlocalStorage.setItem('res', JSON.stringify(res));\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t});\n\t\t\tfunction handleResponse(response) {\n\t\t\treturn response.text().then(text => {\n\t\t\t\tconst data = text && JSON.parse(text);\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tif(response.status === 200){\n\t\t\t\t\t\twindow.location.href = \"#/dashboard/streetnest\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (response.status === 401) {\n\t\t\t\t\t}else if(response.status === 400){\n\t\t\t\t\t\talert(data.message);\n\t\t\t\t\t\t//(response.statusText);\n\t\t\t\t\t}\n\t\t\t\t\tconst error = (data && data.message) || response.statusText;\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\tthis.setState({\n\t\t\terrors: errors,\n\t\t\tformSubmitted: true\n\t\t});\n\t\t}\n\t}\n    render() {\n        const { errors, formSubmitted } = this.state;\n        return (\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-6 side1\">\n\t\t\t\t\t<span><img src={Home} className=\"sticky\" width={400} height={400}/></span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm-6 side2\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-11 registerpage\">\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-md-2\"></div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-10 text-center head\">\n\t\t\t\t\t\t\t\t\t\t<p>REGISTER</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row text\" style={{paddingBottom:\"0px\"}}>\n\t\t\t\t\t\t\t\t\t<div className=\"col-md-2\"></div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-10 text-center\">\n\t\t\t\t\t\t\t\t\t\t<p style={{marginTop:\"0px\"}}>with </p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t<div className=\"row text pad0\" style={{paddingBottom:\"0px\"}}>\n\t\t\t\t\t\t\t\t\t<div className=\"col-md-2\"></div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-10 text-center\">\n\t\t\t\t\t\t\t\t\t\t<p style={{marginTop:\"0px\"}}><span className=\"text-street\">STREET</span> <span className=\"text-nest\"> NEST</span></p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-2\"></div>\n\t\t\t\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t\t\t\t<div className=\"Register\">\n\t\t\t\t\t\t\t\t\t<form onSubmit={this.register}>\n\t\t\t\t\t\t\t\t\t\t<FormGroup className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Label for=\"firstName\" className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"text\" placeholder=\"First Name\" onChange={this.handleInputChange} name=\"firstName\" required/>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"text\" placeholder=\"Last Name\" onChange={this.handleInputChange} name=\"lastName\" required/>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t<FormGroup className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={this.handleInputChange} name=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"/>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<FormGroup className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"text\" placeholder=\"Code +\" onChange={this.handleInputChange} name=\"countryCode\" required/>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-8\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"text\" placeholder=\"Phone\" onChange={this.handleInputChange} name=\"phoneNumber\" required/>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t\t\t\t<FormGroup className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Label for=\"Country\" className=\"col-md-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"text\" placeholder=\"Country\" onChange={this.handleInputChange} name=\"country\" required/>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Label for=\"state\" className=\"col-md-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"text\" placeholder=\"State\"  onChange={this.handleInputChange} name=\"state\" required />\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Label for=\"City\" className=\"col-md-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"text\" placeholder=\"City\" onChange={this.handleInputChange} name=\"city\" required/>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t\t\t<FormGroup className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Password\" onChange={this.handleInputChange} name=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\" title=\"password must be at least 8 characters long contain a number and an uppercase letter and lowercase letter\" required/>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-6\" validationstate={ formSubmitted ? (errors.cpassword ? 'error' : 'success') : null }>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Confirm Password\" onChange={this.handleInputChange} name=\"cpassword\" required/>\n\t\t\t\t\t\t\t\t\t\t\t\t{ errors.cpassword &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{errors.cpassword}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t{/*<FormGroup className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\" onChange={this.handleInputChange} name=\"roleType\" required>\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Sign up As:</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Manager\">Manager</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{/*<option value=\"Landlord\">Landlord</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Client\">Client</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"Tenant\">Tenant</option>\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t\t\t<FormGroup className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" className=\"button1 border_radius0\" id=\"button\">REGISTER</Button>\t\t\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t\t<FormGroup className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Label className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"backlogin text-right\">Already registered? <span><Link to=\"/login/loginuser\">Sign in</Link></span></div>\n\t\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t<div className=\"col-md-1\"></div>\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\t\t\n        )\n    }\n}\nexport default Register;","import React, {Fragment} from 'react';\r\nimport Tabs from 'react-responsive-tabs';\r\nimport Register from './Registeruser/RegisterUser';\r\nconst tabsContent = [\r\n    {\r\n        title: 'Tab 1',\r\n        content: <Register/>\r\n    },\r\n];\r\n\r\nfunction getTabs() {\r\n    return tabsContent.map((tab, index) => ({\r\n        title: tab.title,\r\n        getContent: () => tab.content,\r\n        key: index,\r\n    }));\r\n}\r\n\r\nexport default class RegisterUser extends React.Component {\r\n    render() {\r\n\t    return (\r\n            <Fragment>\r\n                <Tabs tabsWrapperClass=\"body-tabs body-tabs-layout hidden\" transform={false} showInkBar={true} items={getTabs()}/>\r\n            </Fragment>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}